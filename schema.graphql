scalar Date

# ---------------------------------------------- USERS ----------------------------------------------
type User {
  id: ID!
  name: String!
  email: String!
  createdDate: Date!
  lastModifiedDate: Date!
}

input CreateUserRequest {
  name: String!
  email: String!
}

input GetUserByEmailRequest {
  email: String!
}

input GetUserByIdRequest {
  id: ID!
}

input DeleteUserRequest {
  id: ID!
}

input UpdateUserRequest {
  id: ID!
  name: String!
  email: String!
}

# ---------------------------------------------- OPPORTUNITIES ----------------------------------------------
type Opportunity {
  id: ID!
  name: String!
  description: String!
  reporter: User!
  createdDate: Date!
  lastModifiedDate: Date!
}

type OpportunityList {
  opportunities: [Opportunity]
}

input CreateOpportunityRequest {
  name: String!
  description: String!
  reporter: String!
}

input UpdateOpportunityRequest {
  id: ID!
  name: String!
  description: String!
  reporter: String!
}

input DeleteOpportunityRequest {
  id: ID
  name: String
}

type GetOpportunitiesResponse {
  opportunities: [Opportunity]
}

type Query {
  getOpportunities: GetOpportunitiesResponse
  getUserByEmail(event: GetUserByEmailRequest!): User
  getUserById(id: GetUserByIdRequest!): User
}

type Mutation {
  createOpportunity(event: CreateOpportunityRequest!): Boolean
  updateOpportunity(event: UpdateOpportunityRequest!): Boolean
  deleteOpportunity(event: DeleteOpportunityRequest!): Boolean
  createUser(event: CreateUserRequest!): Boolean
  deleteUser(event: DeleteUserRequest!): Boolean
  updateUser(event: UpdateUserRequest!): Boolean
}