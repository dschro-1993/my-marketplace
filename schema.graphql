scalar Date

type User {
  id: ID!
  name: String!
  email: String!
  createdDate: Date!
  lastModifiedDate: Date!
}

type Opportunity {
  id: ID!
  name: String!
  description: String!
  reporter: User!
  createdDate: Date!
  lastModifiedDate: Date!
}

input UserRequest {
  id: ID!
}

input CreateOpportunityRequest {
  name: String!
  description: String!
  reporter: UserRequest!
}

input UpdateOpportunityRequest {
  id: ID!
  name: String!
  description: String!
  reporter: UserRequest!
}

input DeleteOpportunityRequest {
  id: ID!
}

type GetOpportunitiesResponse {
  opportunities: [Opportunity]
}

type Query {
  getOpportunities: GetOpportunitiesResponse
}

type Mutation {
  createOpportunity(event: CreateOpportunityRequest): Boolean
  updateOpportunity(event: UpdateOpportunityRequest): Boolean
  deleteOpportunity(event: DeleteOpportunityRequest): Boolean
}