// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "GraphQLAPIURL": {
      "Value": {
        "Fn::GetAtt": [
          "ApiF70053CD",
          "GraphQLUrl",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiF70053CD": {
      "Properties": {
        "AuthenticationType": "AWS_IAM",
        "Name": "cdk-appsync-backend",
        "XrayEnabled": true,
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "ApiOpportunitiesDataSourceA1054EAA": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "TableName": {
            "Ref": "OpportunitiesTableE0AC6F3C",
          },
        },
        "Name": "OpportunitiesDataSource",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiOpportunitiesDataSourceServiceRole0306D840",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApiOpportunitiesDataSourceServiceRole0306D840": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiOpportunitiesDataSourceServiceRoleDefaultPolicyE7BF6A8E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OpportunitiesTableE0AC6F3C",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiOpportunitiesDataSourceServiceRoleDefaultPolicyE7BF6A8E",
        "Roles": [
          {
            "Ref": "ApiOpportunitiesDataSourceServiceRole0306D840",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiSchema510EECD7": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "Definition": "scalar Date

interface Entity {
  id: ID!
  createdDate: Date!
  lastModifiedDate: Date!
}

# ---------------------------------------------- USERS ----------------------------------------------
type User implements Entity {
  id: ID!
  createdDate: Date!
  lastModifiedDate: Date!
  name: String!
  email: String!
}

input CreateUserRequest {
  name: String!
  email: String!
}

input GetUserByEmailRequest {
  email: String!
}

input GetUserByIdRequest {
  id: ID!
}

input DeleteUserRequest {
  id: ID!
}

input UpdateUserRequest {
  id: ID!
  name: String!
  email: String!
}

# ---------------------------------------------- OPPORTUNITIES ----------------------------------------------
type Opportunity implements Entity {
  id: ID!
  createdDate: Date!
  lastModifiedDate: Date!
  name: String!
  description: String!
  reporter: User!
}

type OpportunityList {
  opportunities: [Opportunity]
}

input CreateOpportunityRequest {
  name: String!
  description: String!
  reporter: String!
}

input UpdateOpportunityRequest {
  id: ID!
  name: String!
  description: String!
  reporter: String!
}

input DeleteOpportunityRequest {
  id: ID
  name: String
}

type GetOpportunitiesResponse {
  opportunities: [Opportunity]
}

type Query {
  getOpportunities: GetOpportunitiesResponse
  getUserByEmail(event: GetUserByEmailRequest!): User
  getUserById(id: GetUserByIdRequest!): User
}

type Mutation {
  createOpportunity(event: CreateOpportunityRequest!): Boolean
  updateOpportunity(event: UpdateOpportunityRequest!): Boolean
  deleteOpportunity(event: DeleteOpportunityRequest!): Boolean
  createUser(event: CreateUserRequest!): Boolean
  deleteUser(event: DeleteUserRequest!): Boolean
  updateUser(event: UpdateUserRequest!): Boolean
}",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
    "ApiUsersDataSource5D3DC4F9": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "TableName": {
            "Ref": "UsersTable9725E9C8",
          },
        },
        "Name": "UsersDataSource",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiUsersDataSourceServiceRoleF3445103",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApiUsersDataSourceServiceRoleDefaultPolicy68FCF2AF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UsersTable9725E9C8",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiUsersDataSourceServiceRoleDefaultPolicy68FCF2AF",
        "Roles": [
          {
            "Ref": "ApiUsersDataSourceServiceRoleF3445103",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiUsersDataSourceServiceRoleF3445103": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApicreateOpportunity1F06400A": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "opportunitiesHandler08BA2D1A",
              "Arn",
            ],
          },
        },
        "Name": "createOpportunity",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApicreateOpportunityServiceRole5432EBE8",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApicreateOpportunityServiceRole5432EBE8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApicreateOpportunityServiceRoleDefaultPolicy75D29323": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "opportunitiesHandler08BA2D1A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "opportunitiesHandler08BA2D1A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApicreateOpportunityServiceRoleDefaultPolicy75D29323",
        "Roles": [
          {
            "Ref": "ApicreateOpportunityServiceRole5432EBE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApideleteOpportunity60C71E98": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "opportunitiesHandler08BA2D1A",
              "Arn",
            ],
          },
        },
        "Name": "deleteOpportunity",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApideleteOpportunityServiceRole31988480",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApideleteOpportunityServiceRole31988480": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApideleteOpportunityServiceRoleDefaultPolicy682F11E5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "opportunitiesHandler08BA2D1A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "opportunitiesHandler08BA2D1A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApideleteOpportunityServiceRoleDefaultPolicy682F11E5",
        "Roles": [
          {
            "Ref": "ApideleteOpportunityServiceRole31988480",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApigetOpportunities07F22C50": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "opportunitiesHandler08BA2D1A",
              "Arn",
            ],
          },
        },
        "Name": "getOpportunities",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApigetOpportunitiesServiceRole3B4E1F6A",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApigetOpportunitiesServiceRole3B4E1F6A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApigetOpportunitiesServiceRoleDefaultPolicyECC3836B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "opportunitiesHandler08BA2D1A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "opportunitiesHandler08BA2D1A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApigetOpportunitiesServiceRoleDefaultPolicyECC3836B",
        "Roles": [
          {
            "Ref": "ApigetOpportunitiesServiceRole3B4E1F6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiupdateOpportunityE4944AB5": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "opportunitiesHandler08BA2D1A",
              "Arn",
            ],
          },
        },
        "Name": "updateOpportunity",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiupdateOpportunityServiceRole60F0F87D",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApiupdateOpportunityServiceRole60F0F87D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiupdateOpportunityServiceRoleDefaultPolicy99DD3D9D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "opportunitiesHandler08BA2D1A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "opportunitiesHandler08BA2D1A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiupdateOpportunityServiceRoleDefaultPolicy99DD3D9D",
        "Roles": [
          {
            "Ref": "ApiupdateOpportunityServiceRole60F0F87D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e45ee2082d227db1b6f0292696ce5ce2b061c105d15efb341925ca040d1feb68.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OpportunitiesTableE0AC6F3C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "ca",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "ca",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "OpportunitiesTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "UsersTable9725E9C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "ea",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "ea",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "UsersTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "opportunitiesHandler08BA2D1A": {
      "DependsOn": [
        "opportunitiesHandlerServiceRoleDefaultPolicy6B3CC725",
        "opportunitiesHandlerServiceRole2CF0C648",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b3d3358ef3c564460d1253c88c52322f13b8fbd73b0b0c25e48c596609516ebd.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "LOG_LEVEL": "DEBUG",
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_METRICS_NAMESPACE": "PowertoolsCDKExample",
            "POWERTOOLS_SERVICE_NAME": "items-store",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":094274105915:layer:AWSLambdaPowertoolsTypeScript:6",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":094274105915:layer:AWSLambdaPowertoolsTypeScript:6",
              ],
            ],
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "opportunitiesHandlerServiceRole2CF0C648",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "opportunitiesHandlerLogRetentionEEB948C5": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "opportunitiesHandler08BA2D1A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "opportunitiesHandlerServiceRole2CF0C648": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "opportunitiesHandlerServiceRoleDefaultPolicy6B3CC725": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OpportunitiesTableE0AC6F3C",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "opportunitiesHandlerServiceRoleDefaultPolicy6B3CC725",
        "Roles": [
          {
            "Ref": "opportunitiesHandlerServiceRole2CF0C648",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
